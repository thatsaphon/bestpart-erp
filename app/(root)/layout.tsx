import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import Image from 'next/image'
import {
  cookies,
  headers,
} from 'next/headers'
import {
  RedirectType,
  redirect,
} from 'next/navigation'
import { AuthPayloadSchema } from '../model/payload'
import { revalidatePath } from 'next/cache'
import Link from 'next/link'
import { Separator } from '@/components/ui/separator'
import { ModeToggle } from '@/components/mode-toggle'
import { NavMenu } from '@/components/nav-menu'
import { NavMenubar } from '@/components/nav-menubar'
import { Button } from '@/components/ui/button'
import UploadButton from '@/components/upload-button'

const inter = Inter({
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description:
    'Generated by create next app',
}

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  if (!headers().has('user'))
    redirect('/auth/login')
  async function logout() {
    'use server'
    cookies().delete('token')
    revalidatePath('/auth/login')
    redirect(
      '/auth/login',
      RedirectType.replace
    )
  }
  const userObject = JSON.parse(
    headers().get('user') as string
  )
  const user =
    AuthPayloadSchema.parse(userObject)

  const upload = async (
    formData: FormData
  ) => {
    'use server'

    const file = formData.get('file')
    console.log(file)
    // fetch(process.env.S3_API, {
    //   method: 'PUT',
    //   body: JSON.stringify()
    // })
  }
  return (
    <div className='min-h-screen flex flex-col'>
      <div className='w-screen h-14 flex items-center justify-between pr-5'>
        <a
          className='flex h-7 items-center justify-center rounded-full text-primary
        px-4 text-center text-sm transition-colors font-bold mr-5'>
          BestPart Alai
        </a>
        <nav className='flex space-x-6 flex-1'>
          {/* <NavMenu /> */}
          <NavMenubar />
        </nav>
        <div className='mr-2 flex items-center'>
          <ModeToggle />
        </div>
      </div>
      <Separator />

      {children}
      {/* <div className='w-screen h-screen sm:grid sm:grid-cols-[200px_1fr]'>
        <div className='hidden w-full h-full border-b sm:flex flex-col p-3 border-r-2 border-slate-300 bg-slate-200 justify-between gap-2'>
          <Link href='/'>
            <Image
              src={'/BestPart_AI.jpg'}
              alt={'BestPartLogo'}
              height={300}
              width={300}
              className='rounded-full'
            />
          </Link>
          <div className='flex flex-col justify-start flex-1 items-center'>
            <span className='text-sm'>ระบบขาย</span>
            <span className='text-sm'>รายงาน</span>
            <span className='text-sm'>ตั้งค่า</span>
            <span className='text-sm'>ออกจากระบบ</span>
          </div>
          <form action={logout} className='text-center'>
            <button className='p-2 bg-amber-900 text-white rounded-md'>
              Logout
            </button>
          </form>
        </div>
        <div className='w-full h-full flex flex-col'>
          <div className='w-full h-[50px] bg-slate-200 flex justify-between items-center px-2'>
            <div></div>
            <div>
              {user.first_name
                ? `${user.first_name} ${user.last_name}`
                : `User: ${user.username
                    ?.slice(0, 1)
                    .toUpperCase()}${user.username?.slice(1)}`}
            </div>
          </div>
          <main className='flex-1'>{children}</main>
        </div>
      </div> */}
    </div>
  )
}
