// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int     @id @default(autoincrement())
  username   String  @unique
  first_name String?
  last_name  String?
  role       Role
  password   String
  flag       Json
  avatarUrl  String?
}

enum Role {
  USER
  ADMIN
}

model Document {
  id              Int            @id @default(autoincrement())
  documentId      String         @unique
  date            DateTime
  generalLedger   GeneralLedger? @relation(fields: [generalLedgerId], references: [id])
  generalLedgerId Int
  skuMovements    SkuMovement[]
  arSubledger     ArSubledger[]
  apSubledger     ApSubledger[]

  @@index([generalLedgerId])
}

model ChartOfAccount {
  id            Int             @id
  name          String
  type          AccountType
  GeneralLedger GeneralLedger[]
}

enum AccountType {
  Assets
  Liabilities
  Equity
  Revenue
  Expense
}

model GeneralLedger {
  id               Int            @id @default(autoincrement())
  document         Document[]
  chartOfAccount   ChartOfAccount @relation(fields: [chartOfAccountId], references: [id])
  chartOfAccountId Int
  amount           Decimal

  @@index([chartOfAccountId])
}

model Contact {
  id        Int       @id @default(autoincrement())
  name      String
  Addresses Address[]
  flag      Json
  taxId     String

  apSubledger ApSubledger[]
  arSubledger ArSubledger[]
}

model Address {
  id           Int     @id @default(autoincrement())
  contact      Contact @relation(fields: [contactId], references: [id])
  contactId    Int
  isMain       Boolean
  name         String
  addressLine1 String?
  addressLine2 String?
  phone        String?

  @@index([contactId])
}

model SkuMaster {
  id   Int    @id @default(autoincrement())
  code String @unique
  name String @unique

  brand      Brand?    @relation(fields: [brandId], references: [id])
  brandId    Int?
  carModel   CarModel? @relation(fields: [carModelId], references: [id])
  carModelId Int?

  flag         Json
  goodsMasters GoodsMaster[]
  skuMovements SkuMovement[]

  @@index([brandId])
  @@index([carModelId])
}

model CarModel {
  id   Int    @id @default(autoincrement())
  name String

  skuMasters SkuMaster[]
}

model Brand {
  id   Int    @id @default(autoincrement())
  name String

  skuMasters SkuMaster[]
}

model GoodsMaster {
  id       Int       @id @default(autoincrement())
  code     String    @unique
  sku      SkuMaster @relation(fields: [skuId], references: [id])
  skuId    Int
  quantity Decimal
  unit     String
  price    Decimal
  flag     Json

  @@index([skuId])
}

model SkuMovement {
  id         Int       @id @default(autoincrement())
  date       DateTime
  sku        SkuMaster @relation(fields: [skuId], references: [id])
  skuId      Int
  goodsCode  String
  document   Document  @relation(fields: [documentId], references: [id])
  documentId Int

  quantity  Int
  cost      Decimal
  sellPrice Decimal
  vat       Decimal

  flag Json

  @@index([skuId])
  @@index([documentId])
}

model ApSubledger {
  id         Int      @id @default(autoincrement())
  ap         Contact  @relation(fields: [contactId], references: [id])
  contactId  Int
  document   Document @relation(fields: [documentId], references: [id])
  documentId Int

  @@index([contactId])
  @@index([documentId])
}

model ArSubledger {
  id         Int      @id @default(autoincrement())
  ar         Contact  @relation(fields: [contactId], references: [id])
  contactId  Int
  document   Document @relation(fields: [documentId], references: [id])
  documentId Int

  @@index([contactId])
  @@index([documentId])
}
